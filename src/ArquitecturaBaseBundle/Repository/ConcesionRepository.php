<?php

namespace ArquitecturaBaseBundle\Repository;

use ArquitecturaBaseBundle\Entity\Usuario;
use Doctrine\ORM\EntityRepository;

/**
 * ConcesionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ConcesionRepository extends EntityRepository
{
    /**
     * Devuelve un array de las concesiones del rol dado, en caso de no coincidir con ninguna
     * devuelve null.
     * @param $usuario Usuario usuario
     * @param $ruta string
     * @return array|null Concesiones
     */
    public function buscarConcesionesParaUsuarioyRuta($usuario, $ruta){
        $roles = $usuario->getRoles();

        $qbConcesiones = $this->getEntityManager()->createQueryBuilder();
        $qbConcesiones->select('c')
            ->from('ArquitecturaBaseBundle:Concesion','c')
            ->innerJoin('c.menu','menu')
            ->innerJoin('c.rol','rol')
            ->andWhere($qbConcesiones->expr()->eq('menu.ruta',':prmRuta'))
            ->andWhere($qbConcesiones->expr()->in('rol.nombre',':prmArrayRol'))
            ->setParameter('prmRuta',$ruta)
            ->setParameter('prmArrayRol',$roles)
        ;
        $concesiones = $qbConcesiones->getQuery()->getResult();
        return $concesiones;
    }


    /**
     * Devuelve las concesiones del usuario dado que esten activas y que
     * sean de menus raices.
     * @param $usuario Usuario
     * @return array Concesiones del Usuario
     */
    public function buscarConcesionesDeUsuario($usuario){
        $roles = $usuario->getRoles();
        $qbConcesiones = $this->getEntityManager()->createQueryBuilder();
        $qbConcesiones->select('c')
            ->from('ArquitecturaBaseBundle:Concesion','c')
            ->innerJoin('c.menu','menu')
            ->innerJoin('c.rol','rol')
            ->andWhere($qbConcesiones->expr()->in('rol.nombre',':prmArrayRol'))
            ->andWhere($qbConcesiones->expr()->eq('menu.activo',':prmAMenuActivo'))
            ->andWhere($qbConcesiones->expr()->isNull('menu.padre'))
            ->setParameter('prmArrayRol',$roles)
            ->setParameter('prmAMenuActivo',true)
        ;
        $concesiones = $qbConcesiones->getQuery()->getResult();
        return $concesiones;
    }
}
